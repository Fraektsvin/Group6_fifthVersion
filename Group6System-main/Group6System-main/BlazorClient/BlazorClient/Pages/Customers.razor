@page "/Customers"
@using BlazorClient.Models
@using BlazorClient.Data.CustomerService
@inject NavigationManager NavigationManager
@inject ICustomerService service

<h3>Register</h3>
<EditForm Model="@_addNewCustomer" OnValidSubmit="@RegisterCustomer">
    <ValidationSummary/>
    <DataAnnotationsValidator/>
    <div class="card">
        <h4 class="card-header">Register as a Customer</h4>
        
        <div class="card-body">
            <div class="col-sm-5">
                CPR Number:<br/>
                <InputNumber @bind-Value="_addNewCustomer.CprNumber"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id="Name" class="form-control" placeholder="Name"
                           @bind-Value="_addNewCustomer.Name"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id="StreetName" class="form-control" placeholder="Street name"
                           @bind-Value="_newAddressToAdd.StreetName"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id="StreetNumber" class="form-control" placeholder="Street number"
                           @bind-Value="_newAddressToAdd.StreetNumber"/>
            </div>
            <br/>
            <div class="col-sm-5">
                ZipCode
                <InputNumber @bind-Value="_newCityToAdd.ZipCode"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id="CityName" class="form-control" placeholder="City name"
                           @bind-Value="_newCityToAdd.CityName"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id="Email" class="form-control" placeholder="Email"
                           @bind-Value="_addNewCustomer.Email"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id="PhoneNumber" class="form-control" placeholder="PhoneNumber"
                           @bind-Value="_addNewCustomer.PhoneNumber"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id="Nationality" class="form-control" placeholder="Nationality"
                           @bind-Value="_addNewCustomer.Nationality"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id ="Residence" class="form-control" placeholder="Residence"
                           @bind-Value="_addNewCustomer.CountryOfResidence"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id ="Username" class="form-control" placeholder="Username"
                           @bind-Value="_newUserToAdd.Username"/>
            </div>
            <br/>
            <div class="col-sm-7">
                <InputText id ="Password" class="form-control" placeholder="Password"
                           @bind-Value="_newUserToAdd.Password"/>
            </div>
            <br/>
            
            <div style="color:red">@ErrorMessage</div>
            
            <button disabled="@_loading" class="btn btn-light" type="submit">Register
                @if (_loading) 
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
            </button>
        </div>
    </div>
</EditForm>


@code {
    private readonly Customer _addNewCustomer = new Customer();
    private readonly Address _newAddressToAdd = new Address();
    private readonly City _newCityToAdd = new City();
    private readonly User _newUserToAdd = new User();
    private string ErrorMessage { get; set; }
    private bool _loading;

    private async Task RegisterCustomer()
    {
        _loading = true;
        try
        {
            _newAddressToAdd.City = _newCityToAdd;
            _addNewCustomer.Address = _newAddressToAdd;
            _addNewCustomer.User = _newUserToAdd;
            String SuccessMessage = await service.AddCustomerAsync(_addNewCustomer);
            ErrorMessage = SuccessMessage;
            _loading = false;
        }
        catch (Exception e)
        {
            ErrorMessage = e.Message;
            _loading = false;
        }
    }
}